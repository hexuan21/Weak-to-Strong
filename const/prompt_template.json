{
    "PART-DECOMPOSE-GENERATE-ANSWER": "",
    "decompose_2sub_0825": "1. Definition\nWe show a math or scientific problem P and its solution S. Your task is:\n(1) break down the complete solution S properly into multiple steps,\n(2) select part of these steps properly (NEITHER JUST ONE STEP NOR NEARLY ALL THE STEPS),\n(3) imagine 2 new problems based on your selected partial steps.\nThese problems can be seen as “simplified problems” or “partial problems” for the original one and are more simple to solve.\nThe new problems are denoted as P_1, P_2, the solutions to these sub-problems are denoted as S_1, S_2.\n\n2. Guidelines\n(1) Completeness: Each new problem P_1, P_2, MUST be an independent, self-contained and well-defined problem, with clean definitions and all necessary conditions to solve it. \nFor example problem P_1 CANNOT quote conditions or results directly from original problem P or original solution S, because P_1 is an independent problem from P ans S. P_1 is also NOT allowed to quote conditions or results directly from other new problems and new solutions, because P_1 is independent from P_2, S_2. \n Specifically, the following words are NOT allowed to exist in your output: 'original problem','original solution','previous problem','previous solution','problem 1','problem 2','both new problems' and so on, because their existence denifinitely imply this new problem or solution quote results from other problems/solutions and are not independent. \n(2) Difficulty and Complexity level: Even the new problems are seen as “sub-problems” of the original problem, but they SHOULD NOT be too simple like computing “\\sqrt{64}+2=10”, “sin(\\pi/6)=0.5”. On the other hand, each new problem SHOULD NOT be too similar or even same as the whole original problem; the solution of new problem SHOULD only be a part of the original full one.\n(3) The solutions S_1, S_2, MUST be self-contained, detailed and complete, providing thorough reasoning and calculations. Each new solution S_1 or S_2 can not borrow results or intermediate values from the other one; they are INDEPENDENT.\n(4) The solutions S_1, S_2, MUST be derived entirely from the original solution S. DO NOT introduce any new methods to S_1 and S_2 that were not mentioned in S. Do not quote results from original solution S or other new solutions.\n(5) It's acceptable for the solutions S_1, S_2, to overlap. You do not need to divide the original solution S into non-overlapping parts to create new problems.\n\n3. I/O format:\n(1) input format:\n### The original problem P: ...\n### The original solution S: ...\n(2) output format:\n### Item 1:\nNew problem 1: …\nNew solution 1: …\n### Item 2:\nNew problem 2: …\nNew solution 2: …\n### End\n(3) other output details\nThe solution can be either in continuous plain text without explicit sequence numbers leading the solving steps or be listed step by step explicitly, both is okay. Please always make the final results boxed.\n\n4. User Input\nPlease show:\nthe 2 new problems and solutions P_1+S_1, P_2+S_2\nRemind all the guidelines above again. \nHere's the input:",
    "decompose_3sub_0825": "1. Definition\nWe show a math or scientific problem P and its solution S. Your task is:\n(1) break down the complete solution S properly into multiple steps,\n(2) select part of these steps properly (NEITHER JUST ONE STEP NOR NEARLY ALL THE STEPS),\n(3) imagine 2 new problems based on your selected partial steps.\nThese problems can be seen as “simplified problems” or “partial problems” for the original one and are more simple to solve.\nThe new problems are denoted as P_1, P_2, P_3, the solutions to these sub-problems are denoted as S_1, S_2, S_3.\n\n2. Guidelines\n(1) Completeness: Each new problem P_1, P_2, P_3, MUST be an independent, self-contained and well-defined problem, with clean definitions and all necessary conditions to solve it. \nFor example problem P_1 CANNOT quote conditions or results directly from original problem P or original solution S, because P_1 is an independent problem from P ans S. P_1 is also NOT allowed to quote conditions or results directly from other new problems and new solutions, because P_1 is independent from P_2, P_3, S_2, S_3.\n Specifically, the following words are NOT allowed to exist in your output: 'original problem','original solution','previous problem','previous solution','problem 1','problem 2','both new problems' and so on, because their existence denifinitely imply this new problem or solution quote results from other problems/solutions and are not independent. \n(2) Difficulty and Complexity level: Even the new problems are seen as “sub-problems” of the original problem, but they SHOULD NOT be too simple like computing “\\sqrt{64}+2=10”, “sin(\\pi/6)=0.5”. On the other hand, each new problem SHOULD NOT be too similar or even same as the whole original problem; the solution of new problem SHOULD only be a part of the original full one.\n(3) The solutions S_1, S_2, S_3 MUST be self-contained, detailed and complete, providing thorough reasoning and calculations. Each new solution can not borrow results or intermediate values from the other one; they are INDEPENDENT.\n(4) The solutions S_1, S_2, S_3 MUST be derived entirely from the original solution S. DO NOT introduce any new methods to S_1, S_2, S_3 that were not mentioned in S. Do not quote results from original solution S or other new solutions.\n(5) It's acceptable for the solutions S_1, S_2, S_3 to overlap. You do not need to divide the original solution S into non-overlapping parts to create new problems.\n\n3. I/O format:\n(1) input format:\n### The original problem P: ...\n### The original solution S: ...\n(2) output format:\n### Item 1:\nNew problem 1: …\nNew solution 1: …\n### Item 2:\nNew problem 2: …\nNew solution 2: …\n### Item 3:\nNew problem 3: …\nNew solution 3: …\n### End\n(3) other output details\nThe solution can be either in continuous plain text without explicit sequence numbers leading the solving steps or be listed step by step explicitly, both is okay. Please always make the final results boxed.\n\n4. User Input\nPlease show:\nthe 3 new problems and solutions P_1+S_1, P_2+S_2, P_3+S_3\nRemind all the guidelines above again. \nHere's the input:",
    "sub_neg_ans_e1_0827": "1. Definition\nWe provide a math or scientific problem P with its correct solution S, please browse the correct solution and generate an incorrect solution N but pretends it's correct in N. \nHere you SHOULD make sure in your generated incorrect solution and try to include **computation or reasoning error** in your generated solution. It can be numerical calculations, equation simplification, reasoning process, etc. \n\n2. Guidelines\nYour generated incorrect solution MUST follow the guidelines below:\n(1) WRONG result: the incorrect solution MUST show an incorrect conclusion or result, which means it's different from our provided correct solution S.\n(2) Seems reasonable: the error introduced in your generated solution SHOULD NOT be too foolish; the solving process of the incorrect solution SHOULD seem to be reasonable.\n(3) DO NOT point out the error explicitly or imply the error implicitly:\nSpecifically, the following words that explicitly mean “an error” are NOT allowed to be in your output, like “mistake”, “error”, “incorrect”, “miscompute”. Besides, some implicit ones that may imply it's incorrect are also NOT allowed to be in your output, like “however”, “instead”, “directly”, and so on.\nTreat all steps and calculations as if they are entirely correct, regardless of whether they contain errors. Present the solution naturally, as though you are unaware of any mistakes.\n(4) Looks different: Your generated solution MUST look obviously different from the provided correct solution, rather than just change several numbers. Try making and writing your generated solution in a way different from the provided correct solution.\n(5) neutral tone: your generated solution SHOULD be in a neutral tone, without any preference to correct solution S or any aversion to your output.\n(6) Similar narrative and style: Whether the provided correct solution S is in 1st narrative (there's many 'we' or 'I' in it) or in 3rd narrative (seldomly use 'we' or 'I'), your output SHOULD follow the same narrative as the correct solution S and follow the same subject of the narrative. Whether the provided correct solution S is in a concise or detailed solving style, you SHOULD follow its style.\n\n3. I/O Format:\n(1) input format:\n### Problem: …\n### Correct solution: …\n(2) output format:\n### Incorrect solution: …\n### End\n(3) other output details:\nIf the correct solution has an explicit sequence number leading the solution steps, then the generated incorrect solution MUST also be in this style; If the correct solution is in continuous plain text without an explicit sequence number leading the steps, then the incorrect solution MUST also be in this style.\nIf the correct solution makes the final result boxed, then you SHOULD also box the final result in output.\nThe WORD LENGTH of your generated incorrect solution SHOULD be comparable with the correct solution, no longer than 1.3* len(correct solution) and no less than 0.7* len(correct solution).\n\n4. User input\nHere we provide the problem and its correct solution; please generate an incorrect solution with some computation errors but the right solving method.\nRemind all the guidelines above again, especially (1) Ensure your output arrives at a different conclusion or result than the provided correct solution S and (2) these words are NOT ALLOWED to be in your output: “mistake”, “error”,  “incorrect”, “miscompute”, “however”, “instead”, “directly”, and other words that explicitly show or implicitly imply an error in the output. Treat all steps and calculations as if they are entirely correct, regardless of whether they contain errors. These two points are VERY IMPORTANT.\nHere's the input: ",
    "sub_neg_ans_e2_0827": "1. Definition\nWe provide a math or scientific problem P with its correct solution S, please browse the correct solution and generate an incorrect solution N but pretends it's correct in N. \nHere you MUST try to use a different and wrong solving method from the correct one; if there's only one possible way to solve this problem, try making some incorrect perturbations of the solving method. \n\n2. Guidelines\nYour generated incorrect solution MUST follow the guidelines below:\n(1) WRONG result: the incorrect solution MUST show an incorrect conclusion or result, which means it's different from our provided correct solution S.\n(2) Seems reasonable: the error introduced in your generated solution SHOULD NOT be too foolish; the solving process of the incorrect solution SHOULD seem to be reasonable.\n(3) DO NOT point out the error explicitly or imply the error implicitly:\nSpecifically, the following words that explicitly mean “an error” are NOT allowed to be in your output, like “mistake”, “error”, “incorrect”, “miscompute”. Besides, some implicit ones that may imply it's incorrect are also NOT allowed to be in your output, like “however”, “instead”, “directly”, and so on. \nTreat all steps and calculations as if they are entirely correct, regardless of whether they contain errors. Present the solution naturally, as though you are unaware of any mistakes.\n(4) Looks different: Your generated solution MUST look obviously different from the provided correct solution S, rather than just change several numbers. Try making and writing your generated solution in a way different from the provided correct solution.\n(5) neutral tone: your generated solution SHOULD be in a neutral tone, without any preference to correct solution S or any aversion to your output.\n(6) Similar narrative and style: Whether the provided correct solution S is in 1st narrative (there's many 'we' or 'I' in it) or in 3rd narrative (seldomly use 'we' or 'I'), your output SHOULD follow the same narrative as the correct solution S and follow the same subject of the narrative. Whether the provided correct solution S is in a concise or detailed solving style, you SHOULD follow its style.\n\n3. I/O Format:\n(1) input format:\n### Problem: …\n### Correct solution: …\n(2) output format:\n### Incorrect solution: …\n### End\n(3) other output details:\nIf the correct solution has an explicit sequence number leading the solution steps, then the generated incorrect solution MUST also be in this style; if the correct solution is in continuous plain text without an explicit sequence number leading the steps, then the incorrect solution MUST also be in this style.\nIf the correct solution makes the final result boxed, then you SHOULD also box the final result in output.\nThe WORD LENGTH of your generated incorrect solution SHOULD be comparable with the correct solution, no longer than 1.3* len(correct solution) and no less than 0.7* len(correct solution).\n\n4. User input\nHere we provide a problem and its correct solution, your task is to generate an incorrect solution using a different, incorrect method from the one used in the correct solution. If the problem can only be solved using one method, you should introduce deliberate errors or perturbations into the correct method to create an incorrect solution. \nWhen you use the incorrect method, do not explicitly state that you are using a different method or compare it with the correct one. Just present the incorrect solution directly. Ensure that the final result from your incorrect solution differs from the correct result. \nRemind all the guidelines above again, especially (1) Ensure your output arrives at a different conclusion or result than the provided correct solution S and (2) these words are NOT ALLOWED to be in your output: “mistake”, “error”,  “incorrect”, “miscompute”, “however”, “instead”, “directly”, and other words that explicitly show or implicitly imply an error in the output. Treat all steps and calculations as if they are entirely correct, regardless of whether they contain errors. These two points are VERY IMPORTANT.\nHere's the input:",
    "full_neg_ans_0827": "1. Definition\nSuppose you're an expert in college math and scientific problems.\nIn the entry of human preference annotation data, there's one “positive” or “chosen” answer and one “negative” or “rejected” answer. This means that during human preference annotation, the “positive” answer is more preferred over the “negative” answer since the former one is more aligned with human intention.\nWe have a math problem with its correct solution. Then we intend to construct a human preference data entry where the correct solution is the positive answer and we need an incorrect or improper solution to serve as the negative answer.\nHere we have (1) a full math problem and its solution as a full positive answer, (2) several sub-problems derived from the solving process of the original full problem, (3) the positive answer and the negative answer of each sub-problem. What we intend to do is: combine the positive or negative answers of these sub-problems and then polish them to get a full negative answer for the original full problem.\nMore specifically, suppose you have the full problem P, its positive answer “full_pos_ans P”, and three sub-problems A, B, C, each with a positive answer and negative answer: {A, sub_pos_ans_A, sub_neg_ans_A}, {B, sub_pos_ans_B, sub_neg_ans_B}, {C, sub_pos_ans_C, sub_neg_ans_C}. We can combine these positive and negative answers to get a full negative answer for the original full problem. Also, we need to polish and revise it using the information from full_pos_ans_P since the sub-answers of sub-problems may not cover the whole solving process for the original problem.\nFor example, you can use sub_pos_ans_A, sub_neg_ans_B, and sub_pos_ans_C to get the “full_neg_ans N”; then the full_neg_ans N will contain the error from sub_neg_ans_B. Or you can use two negative answers and one positive answer, but anyway please make the output full negative answer consistent and not contradict itself internally. DO NOT point it out explicitly; you SHOULD take everything as normal as if it is correct and do not know what and where the error is in your output.\n\n2. Guidelines\nPlease note that your generated incorrect solution MUST follow the guidelines below:\n(1) WRONG result: the full_neg_ans N MUST show an incorrect conclusion or result, which means it's different from full_pos_ans P.\n(2) Seems reasonable: the error introduced in the full_neg_ans N should NOT be too foolish; the solving process of the full_neg_ans N MUST seem to be reasonable.\n(3) DO NOT point out the error explicitly or imply the error implicitly:\nSpecifically, the following words that explicitly mean “an error” are NOT allowed to be in your generated full_neg_ans N, like “mistake”, “error”, “incorrect”, “miscompute”. Besides, some implicit ones that may imply it's incorrect are also NOT allowed to be in your output, like “however”, “instead”, “directly”, and so on.\nTreat all steps and calculations as if they are entirely correct, regardless of whether they contain errors. Present the solution naturally, as though you are unaware of any mistakes.\n(4) DO NOT copy the process from the full_pos_ans P: the full_pos_ans P is just provided for your reference on solving methods and answer formats. You are not allowed to repeat whole or part of the correct solution. They MUST look obviously different, rather than just change several numbers.\n(5) neutral tone: your generated solution SHOULD be in a neutral tone, without any preference to full_pos_ans P or any aversion to your output full_neg_ans N.\n(6) Similar narrative and style: Whether the full_pos_ans P is in 1st narrative (there's many 'we' or 'I' in it) or in 3rd narrative (seldomly use 'we' or 'I'), your output full_neg_ans N SHOULD follow the same narrative as the full_pos_ans P and follow the same subject of the narrative. Whether the full_pos_ans P is in a concise or detailed solving style, you SHOULD follow its style.\n\n3. I/O Format:\n(1) input format:\na. original problem: …\nb. positive answer for the original problem: …\nc. sub-problems extracted from the original problems and their positive & negative answers:\n(a) Sub-problem 1:\nProblem:\nPositive answer:\nNegative answer:\n(b) Sub-problem 2: …\n(c) Sub-problem 3: …\n(2) output format:\n### Full negative answer for original problem: …\n### End\n(3) other output format details:\nIf the full_pos_ans P has an explicit sequence number leading the solution steps, then your generated solution full_neg_ans N MUST also be in this style; if the full_pos_ans P is in continuous plain text without an explicit sequence number leading the steps, then your full_neg_ans N MUST also be in this style.\nIf the full_pos_ans P makes the final result boxed, then you SHOULD also box the final result in output.\nThe WORD LENGTH of your generated full_neg_ans N SHOULD be comparable with the full_pos_ans P, no longer than 1.3* len(full_pos_ans P) and no less than 0.7* len(full_pos_ans P).\n\n4. User input\nHere we show the original problem, its correct solution as the positive answer for your reference, and the sub-problems along with their positive answers and their negative answers.\nPlease: firstly combine and polish the positive and negative answers of these sub-tasks to generate a full negative answer for the original problem; you can use one or more “sub_neg_ans” but note to keep the full negative answer self-contained and consistent within itself.\nRemind all the guidelines above again, especially (1) Ensure your output arrives at a different conclusion or result than the full_pos_ans P and (2) these words are NOT ALLOWED to be in your output: “mistake”, “error”, “incorrect”, “miscompute”, “however”, “instead”, “directly”, and other words that explicitly show or implicitly imply an error in the output. Treat all steps and calculations as if they are entirely correct, regardless of whether they contain errors. These two points are VERY IMPORTANT.\nHere is the input:\n",
    "PART-CHECKING": "",
    "check_s1_subtask_0830": "We are providing a math or scientific problem with its solution. Check if the solution use some conditions (like n=4, f(x)=2x-1, Jenny has 6 apples in total, the water is poured in this way..., etc) that do not exist in the problem. If so, then the problem is not well-defined. \nOutput format: \n (if problem is well-defind) Conclusion: 1.\n (if problem is not well-defind) Conclusion: 0. Reason: <brief reason for why you think it's not well-defined, less than 20 words>.\nFollow the output format strictly. Here's the input:",
    "check_s1_sub_pos_ans_0830": "Here we provide a detailed solution to a math or scientific problem, please count how many arithmetic computation steps or proof steps are there. Output format (**only output the following things**): \nSteps count: <int>. Here we provide the solution. ",
    "check_s1_sub_full_0830": "Here we provide two math or scientific problems A and B. If you think A is a variant of or almost the same as B, which means the only difference in A and B are values of variables and other things are all identical \nThe example of two almost same problems: Problem A: Given a set \\( S \\) of eleven distinct integers, where six of the integers are \\( 5, 7, 8, 13, 16, \\), find the sum of smallest 3 elements. Problem B: Given a set \\( T \\) of eleven distinct integers, where six of the integers are \\( 5, 7, 16, \\), find the sum of smallest 2 elements.\nWe can see Problem A is just a variant of Problem B, they are very similar and solve for the same things. If you think Problem A is just a variant of Problem B, output 0; Otherwise, output 1.\nOutput format (**only output the following things**): \nConclusion: <int, 0 or 1 or 2>.\nHere is the input, we provide the problems A and B:",
    "PART-OTHER": "",
    "revise_exp_imp_err_0827": "Here we show a part of the solution to a math or scientific problem, written by a student. But there's something not in line with our common-sense: the solution explicitly points out the mistake in it or implicitly implies this solution is not correct. For the example, it may look like 'I use this value instead of considering the slope as a little more steep correctly', which implies the solution itself is wrong. \nYour task is to revise this part of solution provided in input, treat all steps and calculations as if they are entirely correct, regardless of whether they contain errors. Present the solution naturally, as though you are unaware of any mistakes. \nOutput format: \n### Revised part: <revised part>\n### End\nHere's the input: \n",
    "convert_narr_0828": "You are given two solutions to a math problem: one correct and one incorrect. These solutions may be written in either the first-person narrative (e.g., 'I will...', 'I use...') or the third-person narrative. Your task is to check if the Incorrect Solution is written in the same narrative style as the Correct Solution. If they match, simply confirm with 'OK'. If they differ, revise the Incorrect Solution to match the narrative style of the Correct Solution.\nOutput format: (if they are same, just output 'OK') ### Revised: OK. \n### End\n (if they are not the same, output the revised one) ### Revised: <revised incorrect solution>. \n### End\n\nRemind that DO NOT change anything of the incorrect solution, DO NOT point out or correct the mistakes in it. Your focus should be solely on aligning the narrative style. \nHere's the input: ",
    "draw_final_res_0903": "Suppose you are an expert in college-level/high-school math or scientific problems.\nHere we provide a math or scientific problem and its solution, please extract the final result of this problem. It can be an option (like '(A) 3.14'), or a numerical value (like 3.14*10^6), or a brief statement of result (like 'the pressure between these two gases are the same'), this is based on the problem and its solution. If you can't extract final result from the solution or the solution is incomplete, put 'Unknown' in your output.\nInput format: \n### Problem: \n###\nSolution: \nOutput format: \n### Final answer: \nHere's the input: ",
    "check_solution_0903": "Suppose you’re a teacher grading students’ homework of math or scientific problems. \nHere we provide a math problem, its correct solution S_ref and a solution to be judged for correctness, denoted as S. Please determine if S is correct based on the **FINAL RESULT of S and S_ref**. \nNote in the following several exemptions:, S should be considered correct: (1) If the final result of S looks different from S_ref **ONLY because they ROUND to different digits** during computation or for the final result, like 1.89, 1.891, 1.8912. (2) If S reaches a different numerical final value because S use different approximation of some scientific constant, like gravity g=9.8 or g=10. (3) If S uses a different method to solve the problem but it reaches the **CORRECT FINAL RESULT**. \nIn other case, like S has some computation error, or reasoning error or method error, which leads to a wrong result, S should be considered as an incorrect solution. In one word, **the “FINAL RESULT” is the main thing we use to judge the correctness**. \n\nInput format: \n### Problem: \n### Reference Solution: \n### Solution to be judged: \nOutput format: \n### Judgement: <int, 1 for correct, 0 for wrong, N/A if you can’t judge it>\nHere’s the input: \n",
    "multi_sampling_gen_ans_0909": "Suppose you're a student learning to solve math/scientific problems, here we provide a math/scientific problem, please solve it and show **DETAILED** process of computation and reasoning, but **DO NO**T be too naggy and lengthy. Remember to **BOX FINAL RESULT**. \nInput format: ### Problem: <problem>\nOutput format: ### Solution: <solution>\n\n Here's the problem: ",
    "paraphrase_0926": "Suppose you're an expert in generating variants of math or scientific problems and their solutions. Here we provide a problem or a solution, please paraphrase it and make sure DO NOT change the original meaning of the problem or the solution. \n\nOutput format: \n### Paraphrased version: <your output>. \n\nHere's the input, which is either a math problem or a student's solution: "
}